# Generated by Django 4.1.7 on 2023-03-12 13:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number nust be entered in the format: '+998906417999'. Up to 14 digits allowed",
                                regex="^\\+?1?\\d{9,14}$",
                            )
                        ],
                    ),
                ),
                ("first_login", models.BooleanField(default=False)),
                ("active", models.BooleanField(default=True)),
                ("staff", models.BooleanField(default=False)),
                ("admin", models.BooleanField(default=False)),
            ],
            options={
                "permissions": (
                    (
                        "class_schedule",
                        "To provide class_schodule | dars jadvalini ko'rish",
                    ),
                    ("feedback", "To provide feedbacks | firk-mulohazalarni ko'rish"),
                    ("add_a _student", "To provide add a student | talaba qo'shish"),
                    ("see students list", "To provide see students "),
                    ("can_see_fgh", "jfbhjsb"),
                    ("can_go_msdsh", "fhebhb"),
                    ("can_change_bjsbhj", "fjfbjvhv"),
                    ("can_change_rshdh", "fvjfvbhbvd"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Courses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course_name",
                    models.CharField(max_length=100, verbose_name="Course title"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_time",
                    models.CharField(
                        max_length=50, null=True, verbose_name="full time salary emaunt"
                    ),
                ),
                (
                    "part_time",
                    models.CharField(
                        max_length=50, null=True, verbose_name="part time salary emaunt"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genders",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gender_type",
                    models.CharField(max_length=15, verbose_name="gender type"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount_one",
                    models.FloatField(max_length=9, verbose_name="bonus | fine emaunt"),
                ),
                (
                    "amount_two",
                    models.FloatField(max_length=9, verbose_name="bonus | fine emaunt"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModBonuses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount_one",
                    models.FloatField(max_length=9, verbose_name="bonus | fine emaunt"),
                ),
                (
                    "amount_two",
                    models.FloatField(max_length=9, verbose_name="bonus | fine emaunt"),
                ),
                (
                    "amount_three",
                    models.FloatField(max_length=9, verbose_name="bonus | fine emaunt"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModDegrees",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.CharField(max_length=50, verbose_name="Level")),
                (
                    "full_time",
                    models.FloatField(
                        max_length=9, null=True, verbose_name="Salary emaunt"
                    ),
                ),
                (
                    "part_time",
                    models.FloatField(
                        max_length=9, null=True, verbose_name="Salary emaunt"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Percentage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Percentage name"),
                ),
                (
                    "percentage",
                    models.FloatField(max_length=5, verbose_name="Percentage amount"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherDegrees",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.CharField(max_length=50, verbose_name="Level")),
                (
                    "full_time",
                    models.FloatField(
                        max_length=9, null=True, verbose_name="Salary emaunt"
                    ),
                ),
                (
                    "part_time",
                    models.FloatField(
                        max_length=9, null=True, verbose_name="Salary emaunt"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PhoneOTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number nust be entered in the format: '+998906417999'. Up to 14 digits allowed",
                                regex="^\\+?1?\\d{9,14}$",
                            )
                        ],
                    ),
                ),
                ("otp", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "validated",
                    models.BooleanField(
                        default=False,
                        help_text="if it is true,that means user have validate otp correctly i second API",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Applicant Full Name",
                    ),
                ),
                (
                    "course_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.courses",
                        verbose_name="Course type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FunctionsTeacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course",
                    models.ManyToManyField(
                        to="systemapp.courses", verbose_name="Course name"
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.teacherdegrees",
                        verbose_name="Level",
                    ),
                ),
                (
                    "salary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.percentage",
                        verbose_name="Percentage salary",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employees",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Last name"),
                ),
                (
                    "phone_num",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number nust be entered in the format: '+998906417999'. Up to 14 digits allowed",
                                regex="^\\+?1?\\d{9,14}$",
                            )
                        ],
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="email nust be entered in the format: 'example@demein'-> oqiljonnishonov@gmail.com.",
                                regex="\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,7}\\b",
                            )
                        ],
                    ),
                ),
                ("birth_date", models.DateField()),
                (
                    "employee_salary",
                    models.FloatField(default=0, max_length=9, verbose_name="Salary"),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, upload_to="photos", verbose_name="Photo"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Added time"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated time"),
                ),
                (
                    "gender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.genders",
                        verbose_name="Gender",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User id",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherInheri",
            fields=[
                (
                    "employees_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="systemapp.employees",
                    ),
                ),
                (
                    "course",
                    models.ManyToManyField(
                        to="systemapp.courses", verbose_name="Course name"
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.teacherdegrees",
                        verbose_name="Level",
                    ),
                ),
                (
                    "salary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.percentage",
                        verbose_name="Percentage salary",
                    ),
                ),
            ],
            bases=("systemapp.employees",),
        ),
        migrations.CreateModel(
            name="ModeratorInheri",
            fields=[
                (
                    "employees_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="systemapp.employees",
                    ),
                ),
                ("level", models.CharField(max_length=50, verbose_name="Level")),
                (
                    "employment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="systemapp.employment",
                    ),
                ),
            ],
            bases=("systemapp.employees",),
        ),
    ]
